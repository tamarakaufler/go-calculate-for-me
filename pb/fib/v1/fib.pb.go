// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/fib/v1/fib.proto

package pb_fib_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FibRequest struct {
	A                    uint64   `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibRequest) Reset()         { *m = FibRequest{} }
func (m *FibRequest) String() string { return proto.CompactTextString(m) }
func (*FibRequest) ProtoMessage()    {}
func (*FibRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fib_ec3f5f3010b89d82, []int{0}
}
func (m *FibRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibRequest.Unmarshal(m, b)
}
func (m *FibRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibRequest.Marshal(b, m, deterministic)
}
func (dst *FibRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibRequest.Merge(dst, src)
}
func (m *FibRequest) XXX_Size() int {
	return xxx_messageInfo_FibRequest.Size(m)
}
func (m *FibRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FibRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FibRequest proto.InternalMessageInfo

func (m *FibRequest) GetA() uint64 {
	if m != nil {
		return m.A
	}
	return 0
}

type FibResponse struct {
	Result               uint64   `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibResponse) Reset()         { *m = FibResponse{} }
func (m *FibResponse) String() string { return proto.CompactTextString(m) }
func (*FibResponse) ProtoMessage()    {}
func (*FibResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fib_ec3f5f3010b89d82, []int{1}
}
func (m *FibResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibResponse.Unmarshal(m, b)
}
func (m *FibResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibResponse.Marshal(b, m, deterministic)
}
func (dst *FibResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibResponse.Merge(dst, src)
}
func (m *FibResponse) XXX_Size() int {
	return xxx_messageInfo_FibResponse.Size(m)
}
func (m *FibResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FibResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FibResponse proto.InternalMessageInfo

func (m *FibResponse) GetResult() uint64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*FibRequest)(nil), "pb.fib.v1.FibRequest")
	proto.RegisterType((*FibResponse)(nil), "pb.fib.v1.FibResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FibServiceClient is the client API for FibService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FibServiceClient interface {
	Compute(ctx context.Context, in *FibRequest, opts ...grpc.CallOption) (*FibResponse, error)
}

type fibServiceClient struct {
	cc *grpc.ClientConn
}

func NewFibServiceClient(cc *grpc.ClientConn) FibServiceClient {
	return &fibServiceClient{cc}
}

func (c *fibServiceClient) Compute(ctx context.Context, in *FibRequest, opts ...grpc.CallOption) (*FibResponse, error) {
	out := new(FibResponse)
	err := c.cc.Invoke(ctx, "/pb.fib.v1.FibService/Compute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FibService service

type FibServiceServer interface {
	Compute(context.Context, *FibRequest) (*FibResponse, error)
}

func RegisterFibServiceServer(s *grpc.Server, srv FibServiceServer) {
	s.RegisterService(&_FibService_serviceDesc, srv)
}

func _FibService_Compute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FibRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FibServiceServer).Compute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.fib.v1.FibService/Compute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FibServiceServer).Compute(ctx, req.(*FibRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FibService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.fib.v1.FibService",
	HandlerType: (*FibServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Compute",
			Handler:    _FibService_Compute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/fib/v1/fib.proto",
}

func init() { proto.RegisterFile("pb/fib/v1/fib.proto", fileDescriptor_fib_ec3f5f3010b89d82) }

var fileDescriptor_fib_ec3f5f3010b89d82 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x48, 0xd2, 0x4f,
	0xcb, 0x4c, 0xd2, 0x2f, 0x33, 0x04, 0x51, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x9c, 0x05,
	0x49, 0x7a, 0x20, 0x5e, 0x99, 0xa1, 0x92, 0x14, 0x17, 0x97, 0x5b, 0x66, 0x52, 0x50, 0x6a, 0x61,
	0x69, 0x6a, 0x71, 0x89, 0x10, 0x0f, 0x17, 0x63, 0xa2, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x4b, 0x10,
	0x63, 0xa2, 0x92, 0x2a, 0x17, 0x37, 0x58, 0xae, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x8c,
	0x8b, 0xad, 0x28, 0xb5, 0xb8, 0x34, 0xa7, 0x04, 0xaa, 0x02, 0xca, 0x33, 0xf2, 0x00, 0x1b, 0x11,
	0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xc5, 0xc5, 0xee, 0x9c, 0x9f, 0x5b, 0x50, 0x5a,
	0x92, 0x2a, 0x24, 0xaa, 0x07, 0xb7, 0x47, 0x0f, 0x61, 0x89, 0x94, 0x18, 0xba, 0x30, 0xc4, 0x7c,
	0x25, 0x86, 0x24, 0x36, 0xb0, 0xf3, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf0, 0xbb, 0xf5,
	0xd3, 0xb5, 0x00, 0x00, 0x00,
}
