// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/healtz/v1/healtz.proto

package pb_healtz_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HealtzResponse_Status int32

const (
	HealtzResponse_UNKNOWN     HealtzResponse_Status = 0
	HealtzResponse_HEALTHY     HealtzResponse_Status = 1
	HealtzResponse_NOT_HEALTHY HealtzResponse_Status = 2
	HealtzResponse_NOT_FOUND   HealtzResponse_Status = 3
)

var HealtzResponse_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "HEALTHY",
	2: "NOT_HEALTHY",
	3: "NOT_FOUND",
}
var HealtzResponse_Status_value = map[string]int32{
	"UNKNOWN":     0,
	"HEALTHY":     1,
	"NOT_HEALTHY": 2,
	"NOT_FOUND":   3,
}

func (x HealtzResponse_Status) String() string {
	return proto.EnumName(HealtzResponse_Status_name, int32(x))
}
func (HealtzResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_healtz_e61a39744e32fd84, []int{1, 0}
}

type HealtzRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealtzRequest) Reset()         { *m = HealtzRequest{} }
func (m *HealtzRequest) String() string { return proto.CompactTextString(m) }
func (*HealtzRequest) ProtoMessage()    {}
func (*HealtzRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_healtz_e61a39744e32fd84, []int{0}
}
func (m *HealtzRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealtzRequest.Unmarshal(m, b)
}
func (m *HealtzRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealtzRequest.Marshal(b, m, deterministic)
}
func (dst *HealtzRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealtzRequest.Merge(dst, src)
}
func (m *HealtzRequest) XXX_Size() int {
	return xxx_messageInfo_HealtzRequest.Size(m)
}
func (m *HealtzRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealtzRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealtzRequest proto.InternalMessageInfo

func (m *HealtzRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type HealtzResponse struct {
	Status               HealtzResponse_Status `protobuf:"varint,1,opt,name=status,enum=pb.healtz.v1.HealtzResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HealtzResponse) Reset()         { *m = HealtzResponse{} }
func (m *HealtzResponse) String() string { return proto.CompactTextString(m) }
func (*HealtzResponse) ProtoMessage()    {}
func (*HealtzResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_healtz_e61a39744e32fd84, []int{1}
}
func (m *HealtzResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealtzResponse.Unmarshal(m, b)
}
func (m *HealtzResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealtzResponse.Marshal(b, m, deterministic)
}
func (dst *HealtzResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealtzResponse.Merge(dst, src)
}
func (m *HealtzResponse) XXX_Size() int {
	return xxx_messageInfo_HealtzResponse.Size(m)
}
func (m *HealtzResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealtzResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealtzResponse proto.InternalMessageInfo

func (m *HealtzResponse) GetStatus() HealtzResponse_Status {
	if m != nil {
		return m.Status
	}
	return HealtzResponse_UNKNOWN
}

func init() {
	proto.RegisterType((*HealtzRequest)(nil), "pb.healtz.v1.HealtzRequest")
	proto.RegisterType((*HealtzResponse)(nil), "pb.healtz.v1.HealtzResponse")
	proto.RegisterEnum("pb.healtz.v1.HealtzResponse_Status", HealtzResponse_Status_name, HealtzResponse_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HealtzServiceClient is the client API for HealtzService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HealtzServiceClient interface {
	HealtzCheck(ctx context.Context, in *HealtzRequest, opts ...grpc.CallOption) (*HealtzResponse, error)
}

type healtzServiceClient struct {
	cc *grpc.ClientConn
}

func NewHealtzServiceClient(cc *grpc.ClientConn) HealtzServiceClient {
	return &healtzServiceClient{cc}
}

func (c *healtzServiceClient) HealtzCheck(ctx context.Context, in *HealtzRequest, opts ...grpc.CallOption) (*HealtzResponse, error) {
	out := new(HealtzResponse)
	err := c.cc.Invoke(ctx, "/pb.healtz.v1.HealtzService/HealtzCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HealtzService service

type HealtzServiceServer interface {
	HealtzCheck(context.Context, *HealtzRequest) (*HealtzResponse, error)
}

func RegisterHealtzServiceServer(s *grpc.Server, srv HealtzServiceServer) {
	s.RegisterService(&_HealtzService_serviceDesc, srv)
}

func _HealtzService_HealtzCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealtzRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealtzServiceServer).HealtzCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.healtz.v1.HealtzService/HealtzCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealtzServiceServer).HealtzCheck(ctx, req.(*HealtzRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HealtzService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.healtz.v1.HealtzService",
	HandlerType: (*HealtzServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealtzCheck",
			Handler:    _HealtzService_HealtzCheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/healtz/v1/healtz.proto",
}

func init() { proto.RegisterFile("pb/healtz/v1/healtz.proto", fileDescriptor_healtz_e61a39744e32fd84) }

var fileDescriptor_healtz_e61a39744e32fd84 = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x48, 0xd2, 0xcf,
	0x48, 0x4d, 0xcc, 0x29, 0xa9, 0xd2, 0x2f, 0x33, 0x84, 0xb2, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2,
	0x85, 0x78, 0x0a, 0x92, 0xf4, 0xa0, 0x02, 0x65, 0x86, 0x4a, 0x9a, 0x5c, 0xbc, 0x1e, 0x60, 0x4e,
	0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x04, 0x17, 0x7b, 0x71, 0x6a, 0x51, 0x59, 0x66,
	0x72, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x8c, 0xab, 0x34, 0x91, 0x91, 0x8b, 0x0f,
	0xa6, 0xb6, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0xc8, 0x9a, 0x8b, 0xad, 0xb8, 0x24, 0xb1, 0xa4,
	0xb4, 0x18, 0xac, 0x96, 0xcf, 0x48, 0x59, 0x0f, 0xd9, 0x70, 0x3d, 0x54, 0xd5, 0x7a, 0xc1, 0x60,
	0xa5, 0x41, 0x50, 0x2d, 0x4a, 0x4e, 0x5c, 0x6c, 0x10, 0x11, 0x21, 0x6e, 0x2e, 0xf6, 0x50, 0x3f,
	0x6f, 0x3f, 0xff, 0x70, 0x3f, 0x01, 0x06, 0x10, 0xc7, 0xc3, 0xd5, 0xd1, 0x27, 0xc4, 0x23, 0x52,
	0x80, 0x51, 0x88, 0x9f, 0x8b, 0xdb, 0xcf, 0x3f, 0x24, 0x1e, 0x26, 0xc0, 0x24, 0xc4, 0xcb, 0xc5,
	0x09, 0x12, 0x70, 0xf3, 0x0f, 0xf5, 0x73, 0x11, 0x60, 0x36, 0x8a, 0x84, 0x39, 0x3f, 0x18, 0xe2,
	0x48, 0x21, 0x0f, 0x2e, 0x6e, 0x88, 0x80, 0x73, 0x46, 0x6a, 0x72, 0xb6, 0x90, 0x34, 0x76, 0x07,
	0x81, 0xbd, 0x2a, 0x25, 0x83, 0xcf, 0xb5, 0x49, 0x6c, 0xe0, 0xe0, 0x32, 0x06, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x40, 0x16, 0xe3, 0xfe, 0x4b, 0x01, 0x00, 0x00,
}
