// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/fact/v1/fact.proto

package pb_fact_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FactRequest struct {
	A                    uint64   `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FactRequest) Reset()         { *m = FactRequest{} }
func (m *FactRequest) String() string { return proto.CompactTextString(m) }
func (*FactRequest) ProtoMessage()    {}
func (*FactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fact_d2382d5c0b9148b1, []int{0}
}
func (m *FactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FactRequest.Unmarshal(m, b)
}
func (m *FactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FactRequest.Marshal(b, m, deterministic)
}
func (dst *FactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FactRequest.Merge(dst, src)
}
func (m *FactRequest) XXX_Size() int {
	return xxx_messageInfo_FactRequest.Size(m)
}
func (m *FactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FactRequest proto.InternalMessageInfo

func (m *FactRequest) GetA() uint64 {
	if m != nil {
		return m.A
	}
	return 0
}

type FactResponse struct {
	Result               uint64   `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FactResponse) Reset()         { *m = FactResponse{} }
func (m *FactResponse) String() string { return proto.CompactTextString(m) }
func (*FactResponse) ProtoMessage()    {}
func (*FactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fact_d2382d5c0b9148b1, []int{1}
}
func (m *FactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FactResponse.Unmarshal(m, b)
}
func (m *FactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FactResponse.Marshal(b, m, deterministic)
}
func (dst *FactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FactResponse.Merge(dst, src)
}
func (m *FactResponse) XXX_Size() int {
	return xxx_messageInfo_FactResponse.Size(m)
}
func (m *FactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FactResponse proto.InternalMessageInfo

func (m *FactResponse) GetResult() uint64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*FactRequest)(nil), "pb.fact.v1.FactRequest")
	proto.RegisterType((*FactResponse)(nil), "pb.fact.v1.FactResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FactServiceClient is the client API for FactService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FactServiceClient interface {
	Compute(ctx context.Context, in *FactRequest, opts ...grpc.CallOption) (*FactResponse, error)
}

type factServiceClient struct {
	cc *grpc.ClientConn
}

func NewFactServiceClient(cc *grpc.ClientConn) FactServiceClient {
	return &factServiceClient{cc}
}

func (c *factServiceClient) Compute(ctx context.Context, in *FactRequest, opts ...grpc.CallOption) (*FactResponse, error) {
	out := new(FactResponse)
	err := c.cc.Invoke(ctx, "/pb.fact.v1.FactService/Compute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FactService service

type FactServiceServer interface {
	Compute(context.Context, *FactRequest) (*FactResponse, error)
}

func RegisterFactServiceServer(s *grpc.Server, srv FactServiceServer) {
	s.RegisterService(&_FactService_serviceDesc, srv)
}

func _FactService_Compute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FactServiceServer).Compute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.fact.v1.FactService/Compute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FactServiceServer).Compute(ctx, req.(*FactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FactService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.fact.v1.FactService",
	HandlerType: (*FactServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Compute",
			Handler:    _FactService_Compute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/fact/v1/fact.proto",
}

func init() { proto.RegisterFile("pb/fact/v1/fact.proto", fileDescriptor_fact_d2382d5c0b9148b1) }

var fileDescriptor_fact_d2382d5c0b9148b1 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x48, 0xd2, 0x4f,
	0x4b, 0x4c, 0x2e, 0xd1, 0x2f, 0x33, 0x04, 0xd3, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x5c,
	0x05, 0x49, 0x7a, 0x60, 0x6e, 0x99, 0xa1, 0x92, 0x34, 0x17, 0xb7, 0x5b, 0x62, 0x72, 0x49, 0x50,
	0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x10, 0x0f, 0x17, 0x63, 0xa2, 0x04, 0xa3, 0x02, 0xa3, 0x06,
	0x4b, 0x10, 0x63, 0xa2, 0x92, 0x1a, 0x17, 0x0f, 0x44, 0xb2, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55,
	0x48, 0x8c, 0x8b, 0xad, 0x28, 0xb5, 0xb8, 0x34, 0xa7, 0x04, 0xaa, 0x04, 0xca, 0x33, 0xf2, 0x85,
	0x18, 0x12, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xc7, 0xc5, 0xee, 0x9c, 0x9f, 0x5b,
	0x50, 0x5a, 0x92, 0x2a, 0x24, 0xae, 0x87, 0xb0, 0x4b, 0x0f, 0xc9, 0x22, 0x29, 0x09, 0x4c, 0x09,
	0x88, 0x25, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x67, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xaa,
	0x14, 0x8f, 0xcd, 0xbf, 0x00, 0x00, 0x00,
}
